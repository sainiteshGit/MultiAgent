using System.ComponentModel;
using Microsoft.SemanticKernel;
using System.Net;
using System.Net.Mail;

namespace Plugins
{
    public class EmailPlugin
    {

            // [KernelFunction, Description("generates the recipeint email address")]
            // public static string RecipientEmailAddress()
            // {
            //     return "emailnamead@gmail.com"; // here you can write your own logic on how to retrieve the list of email receipeints from user

            // }

        [KernelFunction("add_task")]
        [Description("Sends email by taking the input subject, body and recipientEmails list")]
        public async Task SendEmailAsync(
            Kernel kernel,
            List<string> recipientEmails,
            string subject,
            string body
        )
        {
            Console.WriteLine("SendEmail Async getting called");
                using (var client = new SmtpClient())
                {
                    
                    client.Host = "smtp.gmail.com";
                    client.Port = 587;
                    client.DeliveryMethod = SmtpDeliveryMethod.Network;
                    client.UseDefaultCredentials = false;
                    client.EnableSsl = true;
                    //https://support.cloudways.com/en/articles/5131076-how-to-configure-gmail-smtp
                    client.Credentials = new NetworkCredential("emailnamead@GMAIL.COM", "xxxxx"); //xxxxxxx  //


                    using (var mailMessage = new MailMessage())
                    {
                        mailMessage.From = new MailAddress("xxx@gmail.com","AutoGenerated");
                        // Add multiple recipients to the 'To' list
                        //foreach (var recipient in recipientEmails)
                        //{
                            mailMessage.To.Add(new MailAddress("xxxteshad@gmail.com"));
                        //}
                        
                        //Set the subject and body of the
                        mailMessage.Subject = subject;
                        mailMessage.Body = body;

                        client.Send(mailMessage);

                    }
                }


            Console.WriteLine("Email sent!");
        }
    }
}
